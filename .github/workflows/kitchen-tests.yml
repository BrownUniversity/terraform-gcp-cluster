name: kitchen-tests

on: 
  push:
    branches:
      - main
  pull_request:
  # workflow_dispatch:
  # tags:
  #   - v*
jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    outputs:
      image: ${{ steps.upload.outputs.image }}
      tag: ${{ steps.upload.outputs.tag }}

    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2.2.0
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            all:
              - '.github/workflows/kitchen-tests.yml'
              - 'Dockerfile'
              - 'Gemfile*'

      # - name: Build Image
      #   if: steps.filter.outputs.all == 'true' && !contains(github.event.commits[0].message, '[skip docker]')
      #   run: docker build . --file Dockerfile --tag ${{ github.repository.name }} --label "runnumber=${GITHUB_RUN_ID}"

      # - name: Log into registry
      #   if: steps.filter.outputs.all == 'true' && !contains(github.event.commits[0].message, '[skip docker]')
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to gh packages
        id: upload
        if: steps.filter.outputs.all == 'true' && !contains(github.event.commits[0].message, '[skip docker]')
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ github.repository.name }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo $VERSION
          echo IMAGE_ID=$IMAGE_ID
          # docker tag ${{ github.repository.name }} $IMAGE_ID:${VERSION}
          # docker push $IMAGE_ID:$VERSION
          # echo "::set-output name=image::${IMAGE_ID}"
          # echo "::set-output name=tag::${VERSION}"

  # simple-cluster:
  #   needs: [docker]
  #   if: "!contains(github.event.commits[0].message, '[skip ci]')"
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ${{needs.job1.outputs.image}}:${{needs.job1.outputs.tag}}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Create Credential File
  #     run: |
  #       echo "$GCP_CREDENTIAL_JSON" > /tmp/credentials.json
  #     env:
  #       GCP_CREDENTIAL_JSON: ${{ secrets.GCP_CREDENTIAL_JSON}}
  #   - name: Run Kitchen
  #     run: kitchen test simple-cluster
  #     env:
  #       TF_VAR_github_organization: BrownUniversity
  #       TF_VAR_github_token: ${{ secrets.GH_token }}
  #       TF_VAR_billing_account: ${{ secrets.GCP_BILLING_ACCOUNT }}
  #       TF_VAR_org_id: ${{ secrets.GCP_ORG_ID }}
  #       TF_VAR_folder_id: ${{ secrets.GCP_FOLDER_ID }}
  #       TF_VAR_network_name: "network-01"
  #       TF_VAR_subnet_name: "subnet-01"
  #       TF_VAR_routing_mode: "REGIONAL"
  #       GOOGLE_APPLICATION_CREDENTIALS: /tmp/credentials.json
  # brown-modules:
  #   needs: [docker]
  #   if: "!contains(github.event.commits[0].message, '[skip ci]')"
  #   runs-on: ubuntu-latest
  #   container:
  #       image: brownccv/kitchen-terraform:gcp-cluster
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Create Credential File
  #     run: |
  #       echo "$GCP_CREDENTIAL_JSON" > /tmp/credentials.json
  #     env:
  #       GCP_CREDENTIAL_JSON: ${{ secrets.GCP_CREDENTIAL_JSON}}
  #   - name: Run Kitchen
  #     run: kitchen test brown-modules-cluster
  #     env:
  #       TF_VAR_github_organization: BrownUniversity
  #       TF_VAR_github_token: ${{ secrets.GH_token }}
  #       TF_VAR_billing_account: ${{ secrets.GCP_BILLING_ACCOUNT }}
  #       TF_VAR_org_id: ${{ secrets.GCP_ORG_ID }}
  #       TF_VAR_folder_id: ${{ secrets.GCP_FOLDER_ID }}
  #       TF_VAR_network_name: "network-01"
  #       TF_VAR_subnet_name: "subnet-01"
  #       TF_VAR_routing_mode: "REGIONAL"
  #       GOOGLE_APPLICATION_CREDENTIALS: /tmp/credentials.json